package com.yers.pandev_tech_task.service;

import com.yers.pandev_tech_task.model.Role;
import com.yers.pandev_tech_task.model.User;
import com.yers.pandev_tech_task.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 */
@Service
@RequiredArgsConstructor
public class AuthService {
    private final UserRepository userRepository;

    @Value("${security.admin-secret}")
    private String adminSecret;

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ chatId.
     *
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @return –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (User –∏–ª–∏ Admin).
     */
    public Role getUserRole(Long chatId) {
        return userRepository.findById(chatId)
                .map(User::getRole)
                .orElse(Role.User);
    }

    /**
     * –ü–æ–Ω–∏–∂–∞–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ User.
     *
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @return –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.
     */
    public String downgradeRole(Long chatId) {
        User user = userRepository.findById(chatId)
                .orElseThrow(() -> new RuntimeException("User not found"));
        if (user.getRole() == Role.User) {
            return "‚ÑπÔ∏è –£ –≤–∞—Å —É–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–æ–ª—å (User).";
        }
        user.setRole(Role.User);
        userRepository.save(user);
        return "‚úÖ –í—ã —Å—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!";
    }

    /**
     * –ü–æ–≤—ã—à–∞–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ Admin –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ª–æ–≤–∞.
     *
     * @param chatId  ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @param secret  –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞.
     * @return –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.
     */
    public String upgradeToAdmin(Long chatId, String secret) {
        if (!secret.equals(adminSecret)) {
            return "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ!";
        }

        User user = userRepository.findById(chatId)
                .orElse(new User(chatId, "Unknown", Role.User));

        if (user.getRole() == Role.Admin) {
            return "‚úÖ –í—ã —É–∂–µ –∞–¥–º–∏–Ω!";
        }

        user.setRole(Role.Admin);
        userRepository.save(user);

        return String.format("""
        üéâ ‚úÖ –í—ã —Å—Ç–∞–ª–∏ –∞–¥–º–∏–Ω–æ–º! 
        
        %s
        """, getHelpMessageAdmin());
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
     *
     * @return –°—Ç—Ä–æ–∫–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏.
     */
    private String getHelpMessageAdmin() {
        return """
        üìå **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ê–¥–º–∏–Ω–∞:**
        
        üîπ `/viewTree` - –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ä–µ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.
        üîπ `/addElement <–Ω–∞–∑–≤–∞–Ω–∏–µ>` - –î–æ–±–∞–≤–∏—Ç—å –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç.
        üîπ `/addElement <—Ä–æ–¥–∏—Ç–µ–ª—å> <–¥–æ—á–µ—Ä–Ω–∏–π>` - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é.
        üîπ `/removeElement <–Ω–∞–∑–≤–∞–Ω–∏–µ>` - –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç (–∏ –≤—Å–µ –µ–≥–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏).
        üîπ `/download` - –°–∫–∞—á–∞—Ç—å Excel-—Ñ–∞–π–ª —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏.
        üîπ `/upload` - –ó–∞–≥—Ä—É–∑–∏—Ç—å Excel-—Ñ–∞–π–ª —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏.
        üîπ `/help` - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
        
        ‚ú® **–ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—Ä–µ–≤–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π.**""";
    }
}
